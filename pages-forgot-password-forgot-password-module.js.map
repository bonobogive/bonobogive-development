{"version":3,"sources":["./src/app/pages/forgot-password/forgot-password.module.ts","./src/app/pages/forgot-password/forgot-password.page.ts","./src/app/pages/forgot-password/forgot-password.page.html"],"names":[],"mappings":"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","file":"pages-forgot-password-forgot-password-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ForgotPasswordPage } from './forgot-password.page';\r\nimport { ComponentsModule } from '../../components/components.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ForgotPasswordPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    ComponentsModule\r\n  ],\r\n  declarations: [ForgotPasswordPage]\r\n})\r\nexport class ForgotPasswordPageModule {}\r\n","\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { NavController, LoadingController, ToastController } from \"@ionic/angular\";\r\nimport { ErrorService } from \"../../services/error.service\";\r\nimport { AuthService } from \"../../services/auth.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.page.html',\r\n  styleUrls: ['./forgot-password.page.scss'],\r\n})\r\nexport class ForgotPasswordPage implements OnInit {\r\n  displayErrorMessage = false;\r\n  forgotPasswordGroup: FormGroup;\r\n  resetPasswordFormGroup: FormGroup;\r\n  emailSent: boolean;\r\n  constructor(public navController: NavController,\r\n    public loadingCtrl: LoadingController,\r\n    public errorService: ErrorService,\r\n    private toastCtrl: ToastController,\r\n    private formBuilder: FormBuilder,\r\n    private authSerivce: AuthService) {\r\n\r\n    this.forgotPasswordGroup = this.formBuilder.group({\r\n      email: [\"\", Validators.compose([Validators.required])]\r\n    });\r\n\r\n    this.resetPasswordFormGroup = this.formBuilder.group({\r\n      code: [\"\", Validators.compose([Validators.required])],\r\n      email: [\"\", Validators.compose([Validators.required, Validators.email])],\r\n      newPassword: [\"\", Validators.compose([Validators.required, Validators.minLength(8)])],\r\n      confirmNewPassword: [\"\", Validators.compose([Validators.required, Validators.minLength(8)])],\r\n      showPassword: [false]\r\n    }\r\n      , { validator: this.matchingPasswords(\"newPassword\", \"confirmNewPassword\") }\r\n    );\r\n\r\n  }\r\n\r\n  private matchingPasswords(passwordKey: string, confirmPasswordKey: string) {\r\n    return (group: FormGroup): { [key: string]: any } => {\r\n      let password = group.controls[passwordKey];\r\n      let confirmPassword = group.controls[confirmPasswordKey];\r\n\r\n      if (password.value !== confirmPassword.value) {\r\n        return {\r\n          mismatchedPasswords: true\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  async emailSentToast(emailAddress: string) {\r\n    let toast = await this.toastCtrl.create({\r\n      message: \"A recovery password email has been sent to \" + emailAddress,\r\n      duration: 3000,\r\n      position: \"bottom\"\r\n    });\r\n\r\n    await toast.present();\r\n  }\r\n\r\n\r\n\r\n\r\n  async sendRecoveryEmail() {\r\n    var loader = await this.loadingCtrl.create({\r\n      message: \"Sending email...\"\r\n    });\r\n    await loader.present();\r\n\r\n    var email = this.forgotPasswordGroup.value.email;\r\n    var forgotPasswordResult = await this.authSerivce.forgotPassword(email);\r\n    console.log(forgotPasswordResult);\r\n    await loader.dismiss();\r\n    this.emailSent = true;\r\n\r\n    this.emailSentToast(email);\r\n\r\n  }\r\n\r\n  alreadyHaveVerificationCode() {\r\n    if (this.emailSent)\r\n      this.emailSent = false;\r\n    else\r\n      this.emailSent = true;\r\n  }\r\n\r\n  tryAgain() {\r\n    this.emailSent = false;\r\n  }\r\n\r\n  async resetPassword() {\r\n    var loader = await this.loadingCtrl.create({\r\n      message: \"Reseting password...\"\r\n    });\r\n\r\n    try {\r\n      await loader.present();\r\n\r\n      await this.authSerivce.resetPassword(this.resetPasswordFormGroup.value.email, this.resetPasswordFormGroup.value.newPassword, this.resetPasswordFormGroup.value.code);\r\n  \r\n      this.navController.navigateRoot(\"login\");\r\n      await loader.dismiss();\r\n\r\n    }catch(e){\r\n      await loader.dismiss();\r\n      console.log(e);\r\n    }\r\n    \r\n  }\r\n}\r\n","<ion-header>\r\n  <app-topbar title=\"Forgot Password\"></app-topbar>\r\n</ion-header>\r\n\r\n<ion-content class=\"forgot-password\">\r\n\r\n  <form *ngIf=\"!emailSent\" [formGroup]=\"forgotPasswordGroup\" (ngSubmit)=\"sendRecoveryEmail()\" class=\"ion-padding\">\r\n    <ion-grid>\r\n      <ion-row>\r\n        <ion-item>\r\n          <ion-label position=\"stacked\">email</ion-label>\r\n          <ion-input type=\"email\" formControlName=\"email\"></ion-input>\r\n        </ion-item>\r\n      </ion-row>\r\n\r\n      <ion-row>\r\n        <ion-button primary block type=\"submit\" name=\"action\" [disabled]=\"!forgotPasswordGroup.valid\">\r\n          Send recovery email\r\n        </ion-button>\r\n      </ion-row>\r\n\r\n    </ion-grid>\r\n  </form>\r\n\r\n  <ion-grid>\r\n    <ion-row class=\"ion-padding\" *ngIf=\"!emailSent\">\r\n      <ion-button primary block name=\"action\" (click)=\"alreadyHaveVerificationCode()\">\r\n        I have a verification token ready\r\n      </ion-button>\r\n    </ion-row>\r\n\r\n    <ion-row class=\"ion-padding\"  *ngIf=\"emailSent\">\r\n      <ion-button primary block name=\"action\" (click)=\"alreadyHaveVerificationCode()\">\r\n        Try again\r\n      </ion-button>\r\n    </ion-row>\r\n  </ion-grid>\r\n\r\n  <form *ngIf=\"emailSent\" [formGroup]=\"resetPasswordFormGroup\" (ngSubmit)=\"resetPassword()\" class=\"ion-padding\">\r\n    <ion-grid>\r\n\r\n      <ion-row>\r\n        Please enter the verification code we have emailed to you\r\n      </ion-row>\r\n      <ion-row>\r\n        \r\n        <ion-item>\r\n          <ion-label position=\"stacked\">Verification code</ion-label>\r\n          <ion-input type=\"text\" formControlName=\"code\"></ion-input>\r\n        </ion-item>\r\n      </ion-row>\r\n      <ion-row>\r\n        <ion-item>\r\n          <ion-label position=\"stacked\">email address</ion-label>\r\n          <ion-input type=\"email\" formControlName=\"email\"></ion-input>\r\n        </ion-item>\r\n      </ion-row>\r\n      <ion-row>\r\n        <ion-item>\r\n          <ion-label position=\"stacked\">New password</ion-label>\r\n          <ion-input type=\"password\" formControlName=\"newPassword\"></ion-input>\r\n        </ion-item>\r\n      </ion-row>\r\n      <ion-row>\r\n        <ion-item>\r\n          <ion-label position=\"stacked\">Confirm new password</ion-label>\r\n          <ion-input type=\"password\" formControlName=\"confirmNewPassword\"></ion-input>\r\n        </ion-item>\r\n      </ion-row>\r\n      <ion-row>\r\n        <ion-button primary block name=\"action\" type=\"submit\" [disabled]=\"!resetPasswordFormGroup.valid\">\r\n          Reset password\r\n        </ion-button>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </form>\r\n\r\n</ion-content>"],"sourceRoot":"webpack:///"}