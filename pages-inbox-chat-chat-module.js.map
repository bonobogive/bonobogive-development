{"version":3,"sources":["./src/app/pages/inbox/chat/chat.module.ts","./src/app/pages/inbox/chat/chat.page.ts","./src/app/pages/inbox/chat/chat.page.html"],"names":[],"mappings":"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","file":"pages-inbox-chat-chat-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ChatPage } from './chat.page';\r\nimport { ComponentsModule } from '../../../components/components.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ChatPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    ComponentsModule,\r\n  ],\r\n  declarations: [ChatPage]\r\n})\r\nexport class ChatPageModule {}\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { LoadingController, ModalController, NavController, PopoverController, IonContent } from '@ionic/angular';\r\nimport { BehaviorSubject, combineLatest } from 'rxjs';\r\nimport { ActivatedRoute } from '../../../../../node_modules/@angular/router';\r\nimport { AdvertClient, AdvertEntity, ChatClient, ChatDetailsEntity, CreateMessageRequestModel, EntityTypeEnum, MessageClient, MessageResponse, MessageTypeEnum, StatusEnum, UserClient, UserModel } from '../../../clients/bonobogive.client';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { ErrorService } from '../../../services/error.service';\r\n\r\n@Component({\r\n  selector: \"chat\",\r\n  templateUrl: './chat.page.html',\r\n  styleUrls: ['./chat.page.scss'],\r\n})\r\nexport class ChatPage implements OnInit {\r\n\r\n  // googleMapApiKey = \"AIzaSyBL_Jz0y3Y2BNMDn677sRvMRWhW1_PrQ4o\";\r\n  title = 'Post Private Message';\r\n  // conversationId: string;\r\n  advertPrimaryKey: string;\r\n  advertPartitionKey: string;\r\n  advertSortKey: string;\r\n  chatPrimaryKey: string;\r\n  chatDetails: ChatDetailsEntity;\r\n  theirUserProfile: UserModel;\r\n  postMessageForm: FormGroup;\r\n  loadingMedia = false;\r\n  // messages: MessageEntity[] = [];\r\n  gotAllMessages = false;\r\n  messages: MessageResponse[] = [];\r\n\r\n  advertImageUrl = \"\";\r\n  myAdvert = false;\r\n\r\n  @ViewChild('conversationheader')\r\n  conversationheaderView: ElementRef;\r\n  @ViewChild('content') private content: IonContent;\r\n  // @ViewChild(Content)\r\n  // content: Content;\r\n  @ViewChild('conversationFooter')\r\n  conversationFooterView: ElementRef;\r\n  conversationheaderHeight: number;\r\n  conversationFooterHeight: number;\r\n\r\n  messgeInputPlaceholder = \"Message privately\";\r\n\r\n  take = 10;\r\n  limit = new BehaviorSubject<number>(this.take); // import 'rxjs/BehaviorSubject';\r\n  lastLatestMessageKey: string;\r\n  advert: AdvertEntity;\r\n\r\n\r\n  showRatingsCount = true;\r\n  allowRating = false;\r\n  getReviewerRating = true;\r\n  readOnlyRating = true;\r\n\r\n  average = 0;\r\n  chatSeen = false;\r\n\r\n  loadingMessages = false;\r\n  loadingMore: boolean = false;\r\n  loadingChatDetails = false;\r\n\r\n  nextRequestBlob = \"\";\r\n\r\n  constructor(public auth: AuthService,\r\n    private readonly formBuilder: FormBuilder,\r\n    public errorService: ErrorService,\r\n    public loadingCtrl: LoadingController,\r\n    public navController: NavController,\r\n    public popoverCtrl: PopoverController,\r\n    private activatedRoute: ActivatedRoute,\r\n    public modalController: ModalController,\r\n    private chatClient: ChatClient,\r\n    private messageClient: MessageClient,\r\n    private userClient: UserClient,\r\n    private advertClient: AdvertClient) {\r\n\r\n    this.postMessageForm = this.formBuilder.group({\r\n      message: ['', Validators.required]\r\n    });\r\n\r\n\r\n  }\r\n\r\n  StatusEnum = StatusEnum;\r\n\r\n  get isAdvertOwner() {\r\n    if (this.advert && this.advert.userId === this.auth.user.uid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  messageInputFocus() {\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  messageInputBlur() {\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    const urlParams = combineLatest(\r\n      this.activatedRoute.params,\r\n      this.activatedRoute.queryParams,\r\n      (params, queryParams) => ({ ...params, ...queryParams }),\r\n    );\r\n    urlParams.subscribe(routeParams => {\r\n      if (!routeParams.chatId) {\r\n        return;\r\n      }\r\n      this.chatPrimaryKey = routeParams.chatId;\r\n      this.loadChat();\r\n\r\n\r\n      this.advertPartitionKey = this.chatPrimaryKey.split(\"chat.\")[1].split(\"|\")[0];\r\n\r\n      this.advertSortKey = this.chatPrimaryKey.split(\"|\")[1];\r\n\r\n      this.advertClient.get(this.advertPartitionKey, this.advertSortKey).subscribe(res => {\r\n        this.advert = res;\r\n      })\r\n\r\n\r\n\r\n\r\n    });\r\n  }\r\n\r\n\r\n\r\n  loadPreviousMessages(infiniteScroll) {\r\n    if (!this.loadingChatDetails && !this.loadingMessages && (this.nextRequestBlob !== \"\" && this.nextRequestBlob))\r\n      this.loadMessages(infiniteScroll);\r\n\r\n    infiniteScroll.target.complete();\r\n  }\r\n\r\n\r\n\r\n  loadMessages(infiniteScroll) {\r\n    this.loadingMessages = true;\r\n    this.messageClient.get(this.chatPrimaryKey, MessageTypeEnum.Private, 10, this.nextRequestBlob).subscribe(async res => {\r\n      if (infiniteScroll) {\r\n        infiniteScroll.target.complete();\r\n      }\r\n      this.nextRequestBlob = res.lastEvaluatedKeyHash;\r\n      if (res.lastEvaluatedKeyHash === \"null\" || !res.lastEvaluatedKeyHash) this.nextRequestBlob = \"\";\r\n      this.messages.unshift(...res.messages);\r\n\r\n      // TODO - update message seen or chat conversation seen\r\n\r\n      this.chatClient.updateUserChatSeen(`chat.user-${this.auth.user.uid}`, this.chatDetails.primaryKey, true).subscribe(res => {\r\n        console.log(\"Updated chat user to seen\", res);\r\n      });\r\n\r\n\r\n    }).add(() => {\r\n      this.loadingMessages = false;\r\n      this.scrollToBottom();\r\n    });\r\n\r\n  }\r\n\r\n  private loadChat() {\r\n    this.loadingChatDetails = true;\r\n    this.chatClient.get(this.chatPrimaryKey.split('|')[0] + \"|\" + this.chatPrimaryKey.split('|')[1], this.chatPrimaryKey.split('|')[2]).subscribe(res => {\r\n      this.chatDetails = res;\r\n\r\n      // their user\r\n      var theirUserId = this.chatDetails.userIds.find(x => x !== this.auth.user.uid);\r\n\r\n      if (!theirUserId) {\r\n        theirUserId = this.chatDetails.userIds[0];\r\n      }\r\n\r\n      this.userClient.get(theirUserId, true).subscribe(res => {\r\n        this.theirUserProfile = res;\r\n      });\r\n\r\n      this.loadMessages(null);\r\n    }).add(() => {\r\n      this.loadingChatDetails = false;\r\n      this.scrollToBottom();\r\n    });\r\n  }\r\n\r\n\r\n  private scrollToBottom() {\r\n    setTimeout(() => {\r\n      try {\r\n        if (this.content) { this.content.scrollToBottom(); }\r\n      }\r\n      catch (e) {\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  async privateMessageForm() {\r\n    var messageContent = this.postMessageForm.value['message'];\r\n\r\n    var message = new CreateMessageRequestModel();\r\n    message.entityPrimaryKey = this.chatDetails.primaryKey;\r\n    message.messageType = MessageTypeEnum.Private;\r\n    message.text = messageContent;\r\n    message.userId = this.auth.user.uid;\r\n    message.entityType = EntityTypeEnum.Chat;\r\n\r\n\r\n    this.messageClient.post(message).subscribe(res => {\r\n\r\n      var messageResponse = new MessageResponse();\r\n      messageResponse.message = res;\r\n      messageResponse.user = this.auth.user;\r\n      this.messages.push(messageResponse);\r\n\r\n      this.scrollToBottom();\r\n\r\n    }).add(() => {\r\n      this.postMessageForm.reset();\r\n    });\r\n\r\n\r\n  }\r\n\r\n  openAdvertStatus() {\r\n    this.navController.navigateForward(\"advert-status/\" + this.advert.primaryKey);\r\n  }\r\n\r\n  // async updateAdvertStatus() {\r\n\r\n  //   await this.advertService.updateAdvertStatus(this.advert, this.advert.status);\r\n  //   if (this.advert.status === 'collected') {\r\n  //     this.rateUser();\r\n\r\n  //   }\r\n  // }\r\n\r\n  goToProfile(userId: string) {\r\n    this.navController.navigateForward(`user-profile/${userId}`);\r\n  }\r\n\r\n  goToAdvert(partitionKey: string, sortKey: string) {\r\n    this.navController.navigateForward(`advert/${partitionKey}/${sortKey}`);\r\n  }\r\n\r\n  async rateUser() {\r\n\r\n    const data = {\r\n      reviewerUserId: this.auth.user.uid,\r\n      ratedUserId: this.theirUserProfile.uid,\r\n      overallaverages: false,\r\n      advertId: this.chatDetails.partitionKey,\r\n      getAverageUserRating: false,\r\n      getReviewerRating: true,\r\n      readOnlyRating: false,\r\n      showRatingsCount: false,\r\n      displayname: this.theirUserProfile.name\r\n    };\r\n\r\n    var url = `rating?ratedUserId=${data.ratedUserId}&reviewerUserId=${data.reviewerUserId}&overallaverages=${data.overallaverages}&advertId=${data.advertId}&getAverageUserRating=${data.getAverageUserRating}&getReviewerRating=${data.getReviewerRating}&readOnlyRating=${data.readOnlyRating}&showRatingsCount=${data.showRatingsCount}&displayname=${data.displayname}`;\r\n    console.log(\"Navigate to \" + url);\r\n\r\n    this.navController.navigateForward(url);\r\n\r\n  }\r\n\r\n}\r\n","<ion-header>\r\n  <app-topbar title=\"Chat\"></app-topbar>\r\n</ion-header>\r\n\r\n<ion-content #content class=\"ion-padding\" class=\"chat\" style=\"margin-bottom:50em\">\r\n  <ion-spinner [hidden]=\"!loadingChatDetails\"></ion-spinner>\r\n\r\n  <div [hidden]=\"loadingChatDetails\">\r\n\r\n    <ion-item lines=\"none\">\r\n      <a>Inbox</a><span style=\"margin-left:0.5em; margin-right:0.5em;\">></span>\r\n      Private message with {{theirUserProfile?.name}}\r\n      <ion-avatar *ngIf=\"auth.user?.pictureUrl\">\r\n        <img src=\"{{auth.user?.pictureUrl}}\" />\r\n      </ion-avatar>\r\n    </ion-item>\r\n\r\n    <div slot=\"start\" class=\"ion-no-padding\">\r\n      <app-message [square]=\"true\" slot=\"start\" *ngIf=\"advert?.images.length > 0\" [imageUrl]=\"advert.images[0].url\"\r\n        (click)=\"goToAdvert(advert?.partitionKey, advert?.sortKey)\" [title]=\"advert?.title\" [messageMultiLine]=\"false\">\r\n      </app-message>\r\n    </div>\r\n    <hr />\r\n    <ion-icon name=\"information-circle-outline\" style=\"font-size:2em;\"></ion-icon>\r\n    <span>Suggest a location, date and time for collection</span><br />\r\n    <!-- <ion-icon name=\"information-circle-outline\"></ion-icon><span>Send a private message to {{theirUserProfile?.displayName}}, suggest a location and time when you are available</span> -->\r\n    <ion-infinite-scroll threshold=\"100px\" position=\"top\" (ionInfinite)=\"loadPreviousMessages($event)\">\r\n      <ion-infinite-scroll-content loadingSpinner=\"bubbles\" loadingText=\"Loading more messages...\">\r\n      </ion-infinite-scroll-content>\r\n    </ion-infinite-scroll>\r\n\r\n    <div *ngIf=\"messages\" [style.marginBottom.px]=\"conversationFooterHeight\">\r\n      <div *ngFor=\"let message of messages\">\r\n\r\n\r\n        <app-message *ngIf=\"message.message?.userId === theirUserProfile?.uid\" [imageUrl]=\"theirUserProfile?.pictureUrl\"\r\n          [tinyTitle]=\"theirUserProfile?.name\" [message]=\"message.message.text\" [focus]=\"message\"\r\n          [messageMultiLine]=\"true\" [timestamp]=\"message.message.dateTimeUtcCreated\">\r\n        </app-message>\r\n\r\n\r\n        <app-message *ngIf=\"message.message?.userId === auth?.user?.uid\" [imageUrl]=\"auth.user?.pictureUrl\"\r\n          [messageReply]=\"true\" [imagePositionRight]=\"false\" [tinyTitle]=\"auth?.user?.name\"\r\n          [message]=\"message.message.text\" [focus]=\"message.message.delivered\" [messageMultiLine]=\"true\"\r\n          [timestamp]=\"message\">\r\n        </app-message>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ion-content>\r\n\r\n\r\n<ion-footer #conversationFooter [hidden]=\"!chatDetails?.primaryKey\" class=\"chat-footer\">\r\n  <ion-toolbar class=\"toolbar-chatbar\">\r\n    <ion-card [hidden]=\"!auth.user\">\r\n\r\n      <form [formGroup]=\"postMessageForm\" (ngSubmit)=\"privateMessageForm()\">\r\n        <ion-item>\r\n          <ion-input (ionFocus)=\"messageInputFocus()\" (ionBlur)=\"messageInputBlur()\" type=\"text\"\r\n            [placeholder]=\"messgeInputPlaceholder\" formControlName=\"message\"></ion-input>\r\n          <ion-button fill=\"clear\" size=\"large\" type=\"submit\" slot=\"end\" [disabled]=\"!postMessageForm.valid\">\r\n            <ion-icon name=\"send\"></ion-icon>\r\n          </ion-button>\r\n        </ion-item>\r\n\r\n      </form>\r\n    </ion-card>\r\n  </ion-toolbar>\r\n  <ion-toolbar class=\"toolbar-status\" class=\"ion-no-padding\" *ngIf=\"advert && advert?.userId == auth.user?.uid\">\r\n    <ion-item lines=\"none\">\r\n      <ion-button *ngIf=\"auth.user?.uid == advert.userId\" button-default block (click)=\"openAdvertStatus()\">Update\r\n        status</ion-button>\r\n      <ion-button fill=\"clear\" color=\"dark\" *ngIf=\"auth.user?.uid == advert.userId\" button-default block\r\n        (click)=\"openAdvertStatus()\">Status: {{StatusEnum[advert.status]}}</ion-button>\r\n    </ion-item>\r\n  </ion-toolbar>\r\n</ion-footer>"],"sourceRoot":"webpack:///"}