{"version":3,"sources":["./src/app/pages/account/profile/profile.module.ts","./src/app/pages/account/profile/profile.page.ts","./src/app/pages/account/profile/profile.page.html"],"names":[],"mappings":"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","file":"pages-account-profile-profile-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ProfilePage } from './profile.page';\r\nimport { ComponentsModule } from '../../../components/components.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProfilePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    ComponentsModule\r\n  ],\r\n  declarations: [ProfilePage]\r\n})\r\nexport class ProfilePageModule {}\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ErrorService } from \"./../../../services/error.service\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { NavController, ToastController, ModalController, AlertController, LoadingController } from \"@ionic/angular\";\r\nimport { AuthService } from \"../../../services/auth.service\";\r\nimport { ErrorMessageTypeEnum } from \"../../../enums/ErrorMessageTypeEnum\";\r\nimport { Camera, CameraOptions } from \"@ionic-native/camera/ngx\";\r\n// import { FirebaseService } from '../../../services/firebase.service';\r\nimport { merge, combineLatest } from 'rxjs';\r\nimport { ImageService } from '../../../services/image.service';\r\nimport { IImageModel, ImageModel, UserClient } from '../../../clients/bonobogive.client';\r\nimport { mergeMap, flatMap, concatMap, switchMap, tap } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n    selector: 'app-profile',\r\n    templateUrl: './profile.page.html',\r\n    styleUrls: ['./profile.page.scss'],\r\n})\r\nexport class ProfilePage implements OnInit {\r\n\r\n\r\n    @ViewChild('fileInput') private fileInputElement: ElementRef;\r\n\r\n    title = \"Profile\";\r\n    profileFormGroup: FormGroup;\r\n    addressGroup: FormGroup;\r\n    passwordGroup: FormGroup;\r\n    deleteGroup: FormGroup;\r\n    emailGroup: FormGroup;\r\n    usernameFormGroup: FormGroup;\r\n    profilePicture: string;\r\n    images: IImageModel[] = [];\r\n    photofallback: boolean = false;\r\n    pageLoaded: boolean = false;\r\n    isApp: boolean = false;\r\n\r\n\r\n    selectedProfileImage: HTMLImageElement;\r\n    selectedProfileImageFile: File;\r\n\r\n    userId: string;\r\n\r\n    constructor(public auth: AuthService,\r\n        private navController: NavController,\r\n        public formBuilder: FormBuilder,\r\n        public toastCtrl: ToastController,\r\n        private errorService: ErrorService,\r\n        private camera: Camera,\r\n        private alertCtrl: AlertController,\r\n        public imageService: ImageService,\r\n        private loadingController: LoadingController,\r\n        private alertController: AlertController,\r\n        public userClient: UserClient) {\r\n\r\n        this.isApp = (!document.URL.startsWith(\"http\") || document.URL.startsWith(\"http://localhost:8080\"));\r\n        this.populateForms().then(() => {\r\n            this.pageLoaded = true;\r\n        });\r\n\r\n\r\n    }\r\n\r\n    async handleImageSelect(e) {\r\n\r\n        try {\r\n\r\n            const loading = await this.loadingController.create({\r\n                message: 'Saving.profile picture..',\r\n            });\r\n            await loading.present();\r\n\r\n            var files: File[] = e.target.files;\r\n            if (files.length < 1) {\r\n                return;\r\n            }\r\n\r\n            this.selectedProfileImageFile = files[0];\r\n            this.selectedProfileImage = await this.imageService.handleImageSelect(e);\r\n\r\n            this.userClient.presignedUrlProfilePicture(this.auth.user.uid, this.selectedProfileImageFile.type)\r\n                .pipe(tap((res) => {\r\n                    console.log(\"preSignedUrl\", res)\r\n                }))\r\n                .pipe(switchMap(preSignedUrl => this.imageService.uploadFileToS3(this.selectedProfileImageFile, preSignedUrl)\r\n                    .pipe(tap((res) => {\r\n                        console.log(\"uploadProfileImage res\", res);\r\n                    }))))\r\n                .subscribe(async uploadResult => {\r\n                    if (uploadResult[\"url\"]) {\r\n                        let newProfileImageUrl = uploadResult[\"url\"].split(\"?\")[0];\r\n                        console.log(\"new profile image url\", newProfileImageUrl)\r\n                        await this.auth.saveProfilePicture(newProfileImageUrl);\r\n\r\n                        this.auth.user.pictureUrl = newProfileImageUrl;\r\n                    }\r\n                },\r\n                    error => {\r\n                        this.selectedProfileImage = null;\r\n                        this.selectedProfileImageFile = null;\r\n                        this.presentToast(\"Failed to update profile picture\")\r\n                        console.log(error);\r\n                    })\r\n                .add(async () => {\r\n                    await loading.dismiss();\r\n                    this.fileInputElement.nativeElement.value = null;\r\n                });\r\n\r\n\r\n        } catch (e) {\r\n            this.selectedProfileImage = null;\r\n            this.selectedProfileImageFile = null;\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    async populateForms() {\r\n\r\n        this.profileFormGroup = this.formBuilder.group({\r\n            forename: [this.auth.user.givenName, Validators.compose([Validators.required])],\r\n            surname: [this.auth.user.familyName, Validators.compose([Validators.required])]\r\n        });\r\n\r\n        this.emailGroup = this.formBuilder.group({\r\n            email: [this.auth.user.email, Validators.compose([Validators.required, Validators.email])]\r\n        });\r\n\r\n        this.usernameFormGroup = this.formBuilder.group({\r\n            username: [this.auth.user.username, Validators.compose([Validators.required])]\r\n        });\r\n\r\n        this.passwordGroup = this.formBuilder.group({\r\n            existingPassword: [\"\", Validators.compose([Validators.required])],\r\n            password: [\"\"],\r\n            passwordConfirm: [\"\"]\r\n        }, { validator: this.matchingPasswords(\"password\", \"passwordConfirm\") });\r\n\r\n        this.deleteGroup = this.formBuilder.group({\r\n            existingPassword: [\"\", Validators.compose([Validators.required])]\r\n        });\r\n\r\n    }\r\n\r\n    async presentToast(message: string) {\r\n        let toast = await this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000,\r\n            position: \"bottom\"\r\n        });\r\n\r\n        await toast.present();\r\n    }\r\n\r\n    async showIncorrectPassword() {\r\n        const alert = await this.alertController.create({\r\n            header: 'Incorrect password',\r\n            message: 'Please enter your existing password correctly',\r\n            buttons: [\r\n                {\r\n                    text: 'Ok',\r\n                    role: 'ok',\r\n                    cssClass: 'primary',\r\n                    handler: (blah) => {\r\n\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n        await alert.present();\r\n    }\r\n\r\n    private matchingPasswords(passwordKey: string, confirmPasswordKey: string) {\r\n        return (group: FormGroup): { [key: string]: any } => {\r\n            let password = group.controls[passwordKey];\r\n            let confirmPassword = group.controls[confirmPasswordKey];\r\n\r\n            if (password.value !== confirmPassword.value) {\r\n                return {\r\n                    mismatchedPasswords: true\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    async saveEmail() {\r\n        await this.auth.changeEmailAddress(this.emailGroup.value.email);\r\n        await this.presentToast(\"Your email address has been saved\");\r\n    }\r\n\r\n    uploadImage($event): void {\r\n\r\n    }\r\n\r\n    async takePicture() {\r\n\r\n        const options: CameraOptions = {\r\n            quality: 50,\r\n            destinationType: this.camera.DestinationType.DATA_URL,\r\n            encodingType: this.camera.EncodingType.JPEG,\r\n            mediaType: this.camera.MediaType.PICTURE,\r\n            targetWidth: 1024,\r\n            targetHeight: 1024,\r\n            saveToPhotoAlbum: false,\r\n\r\n        }\r\n\r\n        try {\r\n            var imageData = await this.camera.getPicture(options);\r\n            // imageData is either a base64 encoded string or a file URI\r\n            // If it's base64:\r\n\r\n            this.profilePicture = \"data:image/jpeg;base64,\" + imageData;\r\n        } catch (e) {\r\n            console.log(e);\r\n            this.photofallback = true;\r\n        }\r\n    }\r\n\r\n    async saveProfile() {\r\n\r\n        const loading = await this.loadingController.create({\r\n            message: 'Saving...',\r\n        });\r\n        loading.present();\r\n\r\n        try {\r\n\r\n            await this.auth.saveNames(this.profileFormGroup.value.forename, this.profileFormGroup.value.surname);\r\n            loading.dismiss();\r\n            this.presentToast(\"Your profile has been saved\");\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n            loading.dismiss();\r\n            if (e.message) {\r\n                this.errorService.errorHandler(ErrorMessageTypeEnum.Alert, e.message);\r\n            }\r\n            else {\r\n                this.errorService.errorHandler(ErrorMessageTypeEnum.Alert, \"Failed to update profile\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    async savePassword() {\r\n        var result = await this.auth.changePassword(this.passwordGroup.value.password, this.passwordGroup.value.existingPassword);\r\n        if (!result) {\r\n            console.log(\"Failed to change password\");\r\n            this.showIncorrectPassword();\r\n        }\r\n        else {\r\n            await this.presentToast(\"Your password has been updated\");\r\n        }\r\n\r\n    }\r\n\r\n    private async deleteAccount() {\r\n        return await this.auth.deleteAccount();\r\n    }\r\n\r\n    async presentConfirmDeleteAccount() {\r\n        const alert = await this.alertCtrl.create({\r\n            header: \"Confirm delete account\",\r\n            message: \"Do you want to delete your account?\",\r\n            buttons: [\r\n                {\r\n                    text: \"Yes, delete my account\",\r\n                    handler: () => {\r\n                        this.deleteAccount();\r\n                        console.log(\"Account deleted\");\r\n                    }\r\n                },\r\n                {\r\n                    text: \"Cancel\",\r\n                    role: \"cancel\",\r\n                    handler: () => {\r\n                        console.log(\"Cancel\");\r\n                    }\r\n                }\r\n\r\n            ]\r\n        });\r\n        await alert.present();\r\n    }\r\n\r\n    goToSettings() {\r\n        this.navController.navigateForward(\"SettingsPage\");\r\n    }\r\n}\r\n","<ion-header>\r\n    <app-topbar title=\"Profile\"></app-topbar>\r\n</ion-header>\r\n\r\n\r\n<ion-content class=\"ion-padding\" class=\"profile\">\r\n    <div *ngIf=\"pageLoaded\">\r\n\r\n\r\n        <form [formGroup]=\"profileFormGroup\" (ngSubmit)=\"saveProfile()\" class=\"ion-padding\">\r\n\r\n            <div style=\"text-align: center;\">\r\n                <ion-button [fill]=\"'clear'\" (click)=\"fileInput.click()\">Change profile picture</ion-button>\r\n            </div>\r\n            <ion-thumbnail class=\"profile-image\" (click)=\"fileInput.click()\">\r\n                <ng-container *ngIf=\"!selectedProfileImage\">\r\n                    <img *ngIf=\"auth?.user?.pictureUrl\" src=\"{{auth?.user?.pictureUrl}}\" />\r\n                    <img *ngIf=\"!auth?.user?.pictureUrl\" src=\"assets/images/logos/icon-60.png\" />\r\n                </ng-container>\r\n                <ng-container *ngIf=\"selectedProfileImage\">\r\n                    <img src=\"{{selectedProfileImage.src}}\" />\r\n                </ng-container>\r\n               \r\n            </ion-thumbnail>\r\n\r\n            <input style=\"display:none;\" #fileInput type='file' id=\"asd\" (change)=\"handleImageSelect($event)\" />\r\n\r\n            <ion-card>\r\n                <ion-card-header>\r\n                    Your profile\r\n                </ion-card-header>\r\n                <ion-card-content>\r\n\r\n\r\n\r\n\r\n                    <ion-item>\r\n\r\n                        <ion-label>Username: {{auth?.user?.username}}</ion-label>\r\n                        <br />\r\n                        <small>\r\n                            Username can not be changed\r\n                        </small>\r\n\r\n\r\n\r\n                    </ion-item>\r\n\r\n                    <ion-item>\r\n                        <ion-label position=\"stacked\">Forename</ion-label>\r\n                        <ion-input type=\"text\" formControlName=\"forename\"></ion-input>\r\n                    </ion-item>\r\n\r\n                    <ion-item>\r\n                        <ion-label position=\"stacked\">surname</ion-label>\r\n                        <ion-input type=\"text\" formControlName=\"surname\"></ion-input>\r\n                    </ion-item>\r\n\r\n\r\n\r\n                    <ion-button primary slot=\"end\" [disabled]=\"!profileFormGroup.valid\" (click)=\"saveProfile()\">Save your name</ion-button>\r\n\r\n                </ion-card-content>\r\n            </ion-card>\r\n        </form>\r\n\r\n\r\n        <form [formGroup]=\"emailGroup\" (ngSubmit)=\"saveEmail()\" class=\"ion-padding\">\r\n            <ion-card>\r\n                <ion-card-header>\r\n                    Update email address\r\n                </ion-card-header>\r\n                <ion-card-content>\r\n                    <ion-item>\r\n                        <ion-label position=\"stacked\">email address</ion-label>\r\n                        <ion-input type=\"text\" formControlName=\"email\"></ion-input>\r\n                    </ion-item>\r\n\r\n                    <ion-button type=\"submit\" primary slot=\"end\" [disabled]=\"!emailGroup.valid\">Save email address\r\n                    </ion-button>\r\n                </ion-card-content>\r\n            </ion-card>\r\n        </form>\r\n\r\n        <form *ngIf=\"passwordGroup\" [formGroup]=\"passwordGroup\" (ngSubmit)=\"savePassword()\" class=\"ion-padding\">\r\n\r\n            <ion-card>\r\n                <ion-card-header>\r\n                    Change password\r\n                </ion-card-header>\r\n                <ion-card-content>\r\n                    <ion-item lines=\"none\">\r\n                        <ion-note slot=\"start\">\r\n                            Please provide your existing password\r\n                        </ion-note>\r\n                    </ion-item>\r\n                    <ion-item>\r\n                        <ion-label position=\"stacked\">existing password</ion-label>\r\n                        <ion-input type=\"password\" formControlName=\"existingPassword\"></ion-input>\r\n                    </ion-item>\r\n                    <ion-item>\r\n                        <ion-label position=\"stacked\">new password</ion-label>\r\n                        <ion-input type=\"password\" formControlName=\"password\"></ion-input>\r\n                    </ion-item>\r\n                    <ion-item>\r\n                        <ion-label position=\"stacked\">confirm password</ion-label>\r\n                        <ion-input type=\"password\" formControlName=\"passwordConfirm\"></ion-input>\r\n                    </ion-item>\r\n\r\n                    <ion-button type=\"submit\" primary slot=\"end\" [disabled]=\"passwordGroup.invalid\">Save password\r\n                    </ion-button>\r\n\r\n\r\n                </ion-card-content>\r\n\r\n            </ion-card>\r\n        </form>\r\n\r\n\r\n        <form class=\"ion-padding\" [formGroup]=\"deleteGroup\" (ngSubmit)=\"presentConfirmDeleteAccount()\">\r\n            <ion-card>\r\n                <ion-card-header>\r\n                    Delete account\r\n                </ion-card-header>\r\n                <ion-card-content>\r\n                    <p>Deleting your account will delete everything associated with it forever</p>\r\n                    <ion-item lines=\"none\">\r\n                        <ion-note slot=\"start\">\r\n                            Please provide your existing password\r\n                        </ion-note>\r\n                    </ion-item>\r\n                    <ion-item>\r\n                        <ion-label position=\"stacked\">existing password</ion-label>\r\n                        <ion-input type=\"password\" formControlName=\"existingPassword\"></ion-input>\r\n                    </ion-item>\r\n\r\n                    <ion-button type=\"submit\" primary slot=\"end\" [disabled]=\"deleteGroup.invalid\">Delete account\r\n                    </ion-button>\r\n\r\n\r\n                </ion-card-content>\r\n            </ion-card>\r\n        </form>\r\n\r\n    </div>\r\n\r\n    <div *ngIf=\"!pageLoaded\">\r\n        <ion-spinner></ion-spinner>\r\n    </div>\r\n</ion-content>"],"sourceRoot":"webpack:///"}