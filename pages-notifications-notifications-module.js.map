{"version":3,"sources":["./src/app/pages/notifications/notifications.module.ts","./src/app/pages/notifications/notifications.page.ts","./src/app/pages/notifications/notifications.page.html"],"names":[],"mappings":"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","file":"pages-notifications-notifications-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { NotificationsPage } from './notifications.page';\r\nimport { ComponentsModule } from '../../components/components.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NotificationsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    ComponentsModule\r\n  ],\r\n  declarations: [NotificationsPage]\r\n})\r\nexport class NotificationsPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { AlertController, NavController } from \"@ionic/angular\";\r\nimport { ErrorService } from \"../../services/error.service\";\r\nimport { AuthService } from \"../../services/auth.service\";\r\nimport { AdvertService } from '../../services/advert.service';\r\n\r\nimport { ImageService } from '../../services/image.service';\r\nimport { ImageSize } from '../../enums/image-size-enum';\r\nimport {  IAdvertEntity, AdvertEntity, MessageEntity, MessageTypeEnum, MessageClient, MessageResponse  } from '../../clients/bonobogive.client';\r\nimport { WebSocketNotificationService } from '../../services/websocketnotification.service';\r\n\r\n@Component({\r\n  selector: 'notifications',\r\n  templateUrl: './notifications.page.html',\r\n  styleUrls: ['./notifications.page.scss'],\r\n})\r\nexport class NotificationsPage implements OnInit {\r\n\r\n  title = \"notifications\";\r\n  displaySpinner: boolean = false;\r\n  notificationSeen: boolean;\r\n  segmentOption: string = \"new\";\r\n  notifications: MessageResponse[];\r\n  MessageTypeEnum = MessageTypeEnum;\r\n\r\n  constructor(private navController: NavController,\r\n    public alertCtrl: AlertController,\r\n    public errorService: ErrorService,\r\n    public auth: AuthService,\r\n\r\n    public advertService: AdvertService,\r\n\r\n    private imageServie: ImageService, \r\n    public messageClient: MessageClient,\r\n    public websocketService: WebSocketNotificationService) {\r\n      \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getNotifications(null, null);\r\n  }\r\n\r\n  goToInbox() {\r\n    this.navController.navigateRoot(\"inbox\");\r\n  }\r\n\r\n  loadNotification(notification: MessageResponse) {\r\n \r\n    this.messageClient.updateMessageSeen(notification.message.partitionKey, notification.message.sortKey, true).subscribe(res=>{\r\n      console.log(\"message notification set to seen\");\r\n    })\r\n\r\n    this.navController.navigateForward(notification.message.redirectUrl);\r\n  }\r\n\r\n\r\n\r\n  async deleteNotification(notification: MessageEntity) {\r\n    this.messageClient.delete(notification.partitionKey, notification.sortKey).subscribe(res=>{\r\n\r\n      this.notifications.splice(this.notifications.findIndex(item => item.message.primaryKey === notification.primaryKey), 1);\r\n\r\n      console.log(\"Notification deleted\", notification);\r\n    });\r\n  }\r\n\r\n  nextRequestBlob: string;\r\n  getNotifications(refresher, infiniteScroll) {\r\n    if(!refresher && !infiniteScroll) this.displaySpinner = true;\r\n      \r\n    // entityPrimaryKey = \"notification.user-{userId}\"\r\n    this.messageClient.get(`user-${this.auth.user.uid}`, MessageTypeEnum.Notification, 30, this.nextRequestBlob).subscribe(res=> {\r\n      this.nextRequestBlob = res.lastEvaluatedKeyHash;\r\n      if(!this.notifications) this.notifications = [];\r\n      this.notifications.push(...res.messages);\r\n    }).add(()=>{\r\n      this.displaySpinner = false;\r\n      this.websocketService.newNotifictions = false;\r\n      if(refresher) refresher.target.complete();\r\n\r\n      if(infiniteScroll) infiniteScroll.target.complete();\r\n    })\r\n  }\r\n\r\n  refresh(refresher) {\r\n    this.nextRequestBlob = undefined;\r\n    this.notifications = null;\r\n  \r\n    this.getNotifications(refresher, null);\r\n  }\r\n\r\n  getMoreNotifications(infiniteScroll){\r\n    this.getNotifications(null, infiniteScroll);\r\n  }\r\n\r\n  \r\n  goToAdvert(advertId: string) {\r\n    this.navController.navigateForward(`advert/${advertId}`);\r\n  }\r\n\r\n}\r\n","<ion-header>\r\n  <app-topbar title=\"Notifications\"></app-topbar>\r\n</ion-header>\r\n\r\n\r\n<ion-content class=\"ion-no-padding\" class=\"notifications\">\r\n\r\n  <div *ngIf=\"auth.user\">\r\n\r\n    <ion-spinner class=\"mainspinner\" *ngIf=\"displaySpinner\" class=\"ion-padding\" right></ion-spinner>\r\n\r\n    <ion-refresher (ionRefresh)=\"refresh($event)\" slot=\"fixed\">\r\n      <ion-refresher-content></ion-refresher-content>\r\n    </ion-refresher>\r\n\r\n    <!-- Paged notifications -->\r\n    <h2 class=\"ion-padding\">Notifications</h2>\r\n    <ion-list lines=\"none\" class=\"ion-no-padding\" *ngFor=\"let notification of notifications\">\r\n      <ion-item [ngClass]=\"notification?.message?.seen ? 'opened' : 'new'\">\r\n        <app-message (click)=\"loadNotification(notification)\" [messageMultiLine]=\"true\"\r\n          [iconName]=\"notification?.message?.seen ? 'mail-open' : 'mail'\" [focus]=\"notification.message.seen\" [title]=\"notification.message.text\">\r\n        </app-message>\r\n        <ion-button slot=\"end\" color=\"medium\" size=\"large\" fill=\"clear\"\r\n          (click)=\"deleteNotification(notification.message)\">\r\n          <ion-icon name=\"trash\"></ion-icon>\r\n        </ion-button>\r\n      </ion-item>\r\n    </ion-list>\r\n    <ion-list>\r\n      <ion-item *ngIf=\"notifications?.length === 0\">You have no notifications</ion-item>\r\n    </ion-list>\r\n\r\n    <ion-infinite-scroll (ionInfinite)=\"getMoreNotifications($event)\">\r\n      <ion-infinite-scroll-content loadingText=\"Loading more notifications...\"></ion-infinite-scroll-content>\r\n    </ion-infinite-scroll>\r\n  </div>\r\n\r\n  <div *ngIf=\"!auth.user\">\r\n    <p>Please sign in</p>\r\n  </div>\r\n\r\n</ion-content>"],"sourceRoot":"webpack:///"}