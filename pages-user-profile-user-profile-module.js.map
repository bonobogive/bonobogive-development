{"version":3,"sources":["./src/app/pages/user-profile/user-profile.module.ts","./src/app/pages/user-profile/user-profile.page.ts","./src/app/pages/user-profile/user-profile.page.html"],"names":[],"mappings":"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","file":"pages-user-profile-user-profile-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { UserProfilePage } from './user-profile.page';\r\nimport { ComponentsModule } from '../../components/components.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserProfilePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    ComponentsModule\r\n  ],\r\n  declarations: [UserProfilePage]\r\n})\r\nexport class UserProfilePageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NavController } from \"@ionic/angular\";\r\nimport { AuthService } from \"../../services/auth.service\";\r\nimport {  combineLatest } from \"rxjs\";\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ImageService } from '../../services/image.service';\r\nimport { AdvertEntity, UserModel, RatingEntity, AdvertClient, PaginationRequest, UserClient } from '../../clients/bonobogive.client';\r\n\r\n\r\n@Component({\r\n    selector: 'user-profile',\r\n    templateUrl: './user-profile.page.html',\r\n    styleUrls: ['./user-profile.page.scss'],\r\n})\r\nexport class UserProfilePage implements OnInit {\r\n\r\n    title = \"User Profile\";\r\n    userId: string;\r\n    userProfile: UserModel;\r\n    userRating: RatingEntity = new RatingEntity();\r\n    reviewerSubmittedUserRating: RatingEntity = new RatingEntity();\r\n    userRated: boolean;\r\n    userAdverts: AdvertEntity[] = [];\r\n    take = 10;\r\n    profileImageSize: string = \"10em\";\r\n    centerImage: boolean = true;\r\n    showRatingsCount: boolean = true;\r\n    readOnlyRating: boolean = true;\r\n    getOverallaverage: boolean = true;\r\n    getReviewersPreviousRating: boolean = false;\r\n    loadedAllAdverts: boolean = false;\r\n\r\n    constructor(public auth: AuthService,\r\n        public navController: NavController,\r\n        private activatedRoute: ActivatedRoute,\r\n        public imageService: ImageService,\r\n        private advertClient: AdvertClient, \r\n        private userClient: UserClient) {\r\n\r\n\r\n        // this.userId = this.params.get(\"id\");\r\n\r\n\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        const urlParams = combineLatest(\r\n            this.activatedRoute.params,\r\n            this.activatedRoute.queryParams,\r\n            (params, queryParams) => ({ ...params, ...queryParams })\r\n        );\r\n\r\n        urlParams.subscribe(routeParams => {\r\n            this.userId = routeParams.id;\r\n            this.getUserProfile();\r\n            this.getUsersAdverts(null, null);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    getUserProfile() {\r\n      this.userClient.get(this.userId, true).subscribe(res => {\r\n        this.userProfile = res;\r\n      });\r\n    }\r\n\r\n    nextRequestBlob = undefined;\r\n    getUsersAdverts(refresher, infiniteScroll) {\r\n        var pagination = new PaginationRequest();\r\n        pagination.nextRequestBlob = this.nextRequestBlob;\r\n        pagination.take = 10;\r\n        this.advertClient.usersAdverts(this.userId, pagination).subscribe(res=>{\r\n            this.userAdverts = res.entities;\r\n            this.nextRequestBlob = res.lastEvaluatedKeyHash;\r\n\r\n            if(infiniteScroll) {\r\n                infiniteScroll.target.complete();\r\n            }\r\n\r\n            if(refresher) {\r\n                refresher.target.complete();\r\n            }\r\n        });\r\n    }\r\n\r\n    async getMoreMyAdverts(infiniteScroll) {\r\n        if (this.loadedAllAdverts) { infiniteScroll.target.complete(); return; }\r\n        this.getUsersAdverts(null, infiniteScroll);\r\n      }\r\n\r\n      refresh(refresher) {\r\n        this.nextRequestBlob = undefined;\r\n\r\n        this.getUsersAdverts(refresher, null);\r\n      }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n}\r\n","<ion-header>\r\n  <app-topbar title=\"User Profile\"></app-topbar>\r\n</ion-header>\r\n\r\n\r\n<ion-content class=\"ion-padding\" class=\"userProfile\">\r\n\r\n  <ion-refresher (ionRefresh)=\"refresh($event)\" slot=\"fixed\">\r\n    <ion-refresher-content></ion-refresher-content>\r\n  </ion-refresher>\r\n\r\n  <ion-spinner class=\"mainspinner\" class=\"ion-padding\" right [hidden]=\"userProfile?.name\"></ion-spinner>\r\n  <div>\r\n    <app-circle-image *ngIf=\"userProfile?.pictureUrl\"\r\n      [imageUrl]=\"userProfile?.pictureUrl\" [imageSize]=\"profileImageSize\"\r\n      [centerImage]=\"centerImage\"></app-circle-image>\r\n\r\n    <h2>{{userProfile?.name}}</h2>\r\n\r\n    <div *ngIf=\"userProfile?.uid\">\r\n      <!-- <span style=\"color:#6e6e6e\">Member since: {{ userProfile.dateTimeUtcCreated | date  }}</span> -->\r\n    </div>\r\n\r\n    <div [hidden]=\"!userProfile?.name\">\r\n      <hr />\r\n      <h3>{{userProfile?.name}} is giving</h3>\r\n      <app-adverts *ngIf=\"userAdverts && userAdverts.length > 0\" [linear]=\"false\" [adverts]=\"userAdverts\"\r\n        [enableFavourites]=\"true\"></app-adverts>\r\n    </div>\r\n  </div>\r\n\r\n  <ion-infinite-scroll threshold=\"100px\" (ionInfinite)=\"getMoreMyAdverts($event)\">\r\n    <ion-infinite-scroll-content loadingSpinner=\"bubbles\" loadingText=\"Loading more adverts...\">\r\n    </ion-infinite-scroll-content>\r\n  </ion-infinite-scroll>\r\n</ion-content>"],"sourceRoot":"webpack:///"}