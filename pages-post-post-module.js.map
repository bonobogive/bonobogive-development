{"version":3,"sources":["./src/app/pages/post/post.module.ts","./src/app/pages/post/post.page.ts","./src/app/pages/post/post.page.html"],"names":[],"mappings":"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","file":"pages-post-post-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PostPage } from './post.page';\r\nimport { ComponentsModule } from '../../components/components.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PostPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    ComponentsModule\r\n  ],\r\n  declarations: [PostPage]\r\n})\r\nexport class PostPageModule {}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Camera } from '@ionic-native/camera/ngx';\r\nimport { NativeStorage } from '@ionic-native/native-storage/ngx';\r\nimport { AlertController, LoadingController, NavController, ToastController } from \"@ionic/angular\";\r\nimport { combineLatest } from \"rxjs\";\r\nimport { AdvertClient, AdvertEntity, GeoModel, IImageModel, ImageModel, PresignedUrlsModel, StatusEnum, UpdateAdvertRequest, CategoryCodeEnum, IAdvertEntity, IUpdateAdvertRequest } from '../../clients/bonobogive.client';\r\nimport { MapComponent } from \"../../components/map/map.component\";\r\nimport { ErrorMessageTypeEnum } from \"../../enums/ErrorMessageTypeEnum\";\r\nimport { AuthService } from \"../../services/auth.service\";\r\nimport { ErrorService } from \"../../services/error.service\";\r\nimport { GeoService } from \"../../services/geo.service\";\r\nimport { ImageService } from '../../services/image.service';\r\nimport { categoriesPost } from \"./../../constants/categories\";\r\nimport { AdvertService } from \"./../../services/advert.service\";\r\n\r\n@Component({\r\n    selector: 'post',\r\n    templateUrl: './post.page.html',\r\n    styleUrls: ['./post.page.scss'],\r\n})\r\n\r\n\r\nexport class PostPage implements OnInit {\r\n    title = \"Post\";\r\n    photofallback = false;\r\n    categories = categoriesPost;\r\n    postingAdvert: boolean = false;\r\n    progress: number = 0;\r\n    postcodeLookupSpinner: boolean = false;\r\n    findingLocation: boolean = false;\r\n    currentLocation: google.maps.GeocoderResult;\r\n    postFormGroup: FormGroup;\r\n    maxNumberPictures = 6;\r\n    foundAddress: string;\r\n    isApp: boolean = false;\r\n    lat: number;\r\n    lng: number;\r\n    filesSelected: File[] = [];\r\n    imagesSelected: HTMLImageElement[] = [];\r\n    expiryDaysLength: number = 30;\r\n\r\n    loadingAdvert = false;\r\n\r\n    fileInput: string; // we clear this so a user can add a picture, and remove and then try same image again\r\n\r\n\r\n    private advertPrimaryKey: string;\r\n    private advertPartitionKey: string;\r\n    private advertSortKey: string;\r\n\r\n\r\n    showMap: boolean = false;\r\n    editMode: boolean = false;\r\n    existingAdvert: AdvertEntity;\r\n    error: string = \"\";\r\n    removeExpiry: boolean = false;\r\n    draft: boolean | undefined = false;\r\n\r\n    advertExpired: boolean = false;\r\n    @ViewChild(\"mapComponent\", { read: MapComponent, static: true }) mapComponent: MapComponent;\r\n\r\n    constructor(private navController: NavController,\r\n        public auth: AuthService,\r\n        public loadingCtrl: LoadingController,\r\n        public alertCtrl: AlertController,\r\n        public errorService: ErrorService,\r\n        public camera: Camera,\r\n        public advertService: AdvertService,\r\n        private toastController: ToastController,\r\n        private geoService: GeoService,\r\n        private formBuilder: FormBuilder,\r\n        private activatedRoute: ActivatedRoute,\r\n        private nativeStorage: NativeStorage,\r\n        public imageService: ImageService,\r\n        private advertClient: AdvertClient) {\r\n\r\n        this.postFormGroup = this.formBuilder.group({\r\n            title: [\"\", Validators.compose([Validators.required])],\r\n            description: [\"\", Validators.compose([Validators.required])],\r\n            category: [CategoryCodeEnum.Unknown, Validators.compose([Validators.required])],\r\n            expiryDaysLength: [30, Validators.compose([Validators.required])],\r\n            postcode: [\"\", Validators.compose([Validators.pattern(\"^(([gG][iI][rR] {0,}0[aA]{2})|((([a-pr-uwyzA-PR-UWYZ][a-hk-yA-HK-Y]?[0-9][0-9]?)|(([a-pr-uwyzA-PR-UWYZ][0-9][a-hjkstuwA-HJKSTUW])|([a-pr-uwyzA-PR-UWYZ][a-hk-yA-HK-Y][0-9][abehmnprv-yABEHMNPRV-Y]))) {0,}[0-9][abd-hjlnp-uw-zABD-HJLNP-UW-Z]{2}))$\"), Validators.required])],\r\n            lat: [\"\", Validators.compose([Validators.required])],\r\n            lng: [\"\", Validators.compose([Validators.required])]\r\n        });\r\n\r\n        this.isApp = false;\r\n    }\r\n\r\n    async uploadImage(filelist: FileList): Promise<void> {\r\n\r\n        let files = Array.from(filelist);\r\n        for (let file of files) {\r\n            this.filesSelected.push(file);\r\n        }\r\n\r\n        console.log(\"files selected\", this.filesSelected)\r\n        this.imagesSelected = await this.imageService.filesToImages(this.filesSelected);\r\n        this.fileInput = undefined;\r\n\r\n\r\n    }\r\n\r\n    removeSelectedImage(image: HTMLImageElement) {\r\n        this.imagesSelected = this.imagesSelected.filter(x => x !== image);\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    updateExpiryDays(value: number) {\r\n        this.expiryDaysLength = value;\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n        const urlParams = combineLatest(\r\n            this.activatedRoute.params,\r\n            this.activatedRoute.queryParams,\r\n            (params, queryParams) => ({ ...params, ...queryParams })\r\n        );\r\n\r\n        urlParams.subscribe(async routeParams => {\r\n\r\n            this.advertPrimaryKey = routeParams.id;\r\n\r\n            if (!this.advertPrimaryKey) { await this.updateLocation(); return; }\r\n\r\n            this.editMode = true;\r\n            this.advertPartitionKey = this.advertPrimaryKey.split(\"|\")[0];\r\n            this.advertSortKey = this.advertPrimaryKey.split(\"|\")[1];\r\n            await this.getAdvert();\r\n\r\n        });\r\n    }\r\n\r\n    async getAdvert() {\r\n        this.loadingAdvert = true;\r\n\r\n        this.advertClient.get(this.advertPartitionKey, this.advertSortKey).subscribe(async res => {\r\n            if (!res) {\r\n                this.navController.navigateRoot(\"home\");\r\n                console.log(\"Advert not found\");\r\n                return;\r\n            }\r\n\r\n            this.existingAdvert = res;\r\n            this.draft = this.existingAdvert.draft;\r\n            this.advertExpired = this.existingAdvert.expired;\r\n\r\n            this.postFormGroup.patchValue({ title: res.title, description: res.description, category: res.category });\r\n\r\n            let result = await this.geoService.findAddressByCoords(this.existingAdvert.geoLocation?.lat, this.existingAdvert.geoLocation?.lng)\r\n            var foundPostcode = this.geoService.extractPostcode(result.address_components);\r\n\r\n            this.postFormGroup.patchValue({ postcode: foundPostcode, lat: result.geometry.location.lat(), lng: result.geometry.location.lng() });\r\n            this.lat = result.geometry.location.lat();\r\n            this.lng = result.geometry.location.lng();\r\n            this.postFormGroup.controls['lat'].setValue(this.lat);\r\n            this.postFormGroup.controls['lng'].setValue(this.lng);\r\n            this.postFormGroup.controls['category'].setValue(this.existingAdvert.category);\r\n\r\n\r\n            console.log(\"Advert \" + this.advertPrimaryKey + \" loaded\");\r\n\r\n            if (this.lat && this.lng) {\r\n                this.showMap = true;\r\n                this.mapComponent.lat = this.lat;\r\n            }\r\n            else {\r\n                this.showMap = false;\r\n            }\r\n            if (this.lng) {\r\n                this.mapComponent.lng = this.lng;\r\n            }\r\n\r\n            this.mapComponent.loadMap();\r\n\r\n\r\n\r\n\r\n\r\n        }, error => console.log(error))\r\n            .add(() => {\r\n                this.loadingAdvert = false;\r\n            });\r\n    }\r\n\r\n    async existingImagePressAlert(image: IImageModel) {\r\n        let alert = await this.alertCtrl.create({\r\n            header: 'Delete image',\r\n            subHeader: 'Would you like to delete this image?',\r\n            buttons: [\r\n                {\r\n                    text: 'Cancel',\r\n                    role: 'cancel',\r\n                    handler: () => {\r\n\r\n                    }\r\n                },\r\n                {\r\n                    text: 'Delete',\r\n                    handler: () => {\r\n                        this.existingAdvert.images = this.existingAdvert.images.filter(x => x !== image);\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n        await alert.present();\r\n    }\r\n\r\n    async imagePressAlert(image: HTMLImageElement) {\r\n        let alert = await this.alertCtrl.create({\r\n            header: 'Remove image',\r\n            subHeader: 'Would you like to remove this image?',\r\n            buttons: [\r\n                {\r\n                    text: 'Cancel',\r\n                    role: 'cancel',\r\n                    handler: () => {\r\n\r\n                    }\r\n                },\r\n                {\r\n                    text: 'Remove',\r\n                    handler: () => {\r\n                        this.removeSelectedImage(image);\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n        await alert.present();\r\n    }\r\n\r\n    async updateLocation() {\r\n        try {\r\n\r\n            this.findingLocation = true;\r\n            this.postcodeLookupSpinner = true;\r\n            await this.geoService.refreshCurrentDevicePosition();\r\n\r\n            this.postFormGroup.controls['lat'].setValue(this.geoService.latestDevicePosition.coords.latitude);\r\n            this.postFormGroup.controls['lng'].setValue(this.geoService.latestDevicePosition.coords.longitude);\r\n\r\n\r\n            this.currentLocation = await this.geoService.findAddressByCoords(this.geoService.latestDevicePosition.coords.latitude, this.geoService.latestDevicePosition.coords.longitude);\r\n            var postcode = this.geoService.extractPostcode(this.currentLocation.address_components);\r\n            this.postFormGroup.controls['postcode'].setValue(postcode);\r\n            this.foundAddress = this.currentLocation.formatted_address;\r\n            if (postcode) {\r\n                await this.updateLatLngFromPostcode(postcode);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.log(\"no location\");\r\n            this.findingLocation = false;\r\n            this.postcodeLookupSpinner = false;\r\n            this.foundAddress = \"\";\r\n            this.errorService.errorHandler(ErrorMessageTypeEnum.Toast, err, \"Unable to find device location\");\r\n            this.error = err;\r\n        }\r\n        finally {\r\n            this.findingLocation = false;\r\n            this.postcodeLookupSpinner = false;\r\n        }\r\n    }\r\n\r\n    async postAdvert(filesSelected: File[]) {\r\n\r\n\r\n        // POST ADVERT\r\n        var loading = await this.loadingCtrl.create({\r\n            spinner: \"dots\"\r\n        });\r\n        this.postingAdvert = true;\r\n\r\n        var advert = new AdvertEntity();\r\n\r\n        advert.status = StatusEnum.Open;\r\n        advert.userId = this.auth.user.uid;\r\n\r\n        advert.draft = this.draft;\r\n        advert.title = this.postFormGroup.value.title;\r\n        advert.description = this.postFormGroup.value.description;\r\n        advert.category = CategoryCodeEnum[CategoryCodeEnum[parseInt(this.postFormGroup.value.category)]];\r\n\r\n        advert.geoLocation = new GeoModel();\r\n        advert.geoLocation.lat = parseFloat(this.postFormGroup.value.lat);\r\n        advert.geoLocation.lng = parseFloat(this.postFormGroup.value.lng);\r\n\r\n        if (filesSelected?.length > 0) {\r\n            if (!advert.images) advert.images = [];\r\n            for (let selectedImage of this.filesSelected) {\r\n                let newImage = new ImageModel();\r\n                newImage.mimeType = selectedImage.type;\r\n                advert.images.push(newImage);\r\n            }\r\n        }\r\n\r\n        // create new advert\r\n        this.advertClient.post(advert).subscribe(async newAdvert => {\r\n\r\n            // create presignedUrls for images using new advert primary key\r\n            await this.uploadImages(newAdvert.imagesPresignedUrls);\r\n            this.navController.navigateRoot(`advert/${newAdvert.advert.primaryKey}`);\r\n            this.resetAdvert();\r\n\r\n        }, error => console.log(error))\r\n            .add(async () => {\r\n                await loading.dismiss();\r\n                this.postingAdvert = false;\r\n            });\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    async updateAdvert(filesSelected: File[]) {\r\n\r\n\r\n        // POST ADVERT\r\n        var loading = await this.loadingCtrl.create({\r\n            spinner: \"dots\"\r\n        });\r\n\r\n        await loading.present();\r\n\r\n        this.postingAdvert = true;\r\n\r\n        let request: UpdateAdvertRequest = {\r\n            advert: {\r\n                partitionKey: this.advertPartitionKey,\r\n                sortKey: this.advertSortKey,\r\n                draft: this.draft,\r\n                title: this.postFormGroup.value.title,\r\n                description: this.postFormGroup.value.description,\r\n                category: CategoryCodeEnum[CategoryCodeEnum[parseInt(this.postFormGroup.value.category)]],\r\n                geoLocation: {\r\n                    lat: parseFloat(this.postFormGroup.value.lat),\r\n                    lng: parseFloat(this.postFormGroup.value.lng)\r\n                } as GeoModel,\r\n                userId: this.auth.user.uid,\r\n                images : [].concat(this.existingAdvert.images), // clone original images array\r\n                init: null,\r\n                toJSON: null\r\n            },\r\n            init: null,\r\n            toJSON: null\r\n        } ;\r\n\r\n        // append new images\r\n        let newImages: ImageModel[] = [];\r\n        if (filesSelected?.length > 0) {\r\n\r\n            for (let selectedImage of this.filesSelected) {\r\n                let newImage = new ImageModel();\r\n                newImage.mimeType = selectedImage.type;\r\n                newImages.push(newImage);\r\n            }\r\n        }\r\n\r\n        request.advert.images.push(...newImages);\r\n\r\n        this.advertClient.put(request).subscribe(async (uploadResult) => {\r\n\r\n            await this.uploadImages(uploadResult.imagesPresignedUrls);\r\n\r\n            this.navController.navigateRoot(`advert/${this.advertPrimaryKey}`);\r\n            this.resetAdvert();\r\n\r\n        }, error => console.log(error))\r\n            .add(async () => {\r\n                await loading.dismiss();\r\n                this.postingAdvert = false;\r\n            });\r\n\r\n    }\r\n\r\n    private async uploadImages(presignedUrls: PresignedUrlsModel[]) {\r\n        for (let x = 0; x < presignedUrls.length; x++) {\r\n            let file = this.filesSelected[x];\r\n            let result = await this.imageService.uploadFileToS3(file, presignedUrls[x].signedUrl).toPromise();\r\n            console.log(\"uploadProfileImage res\", result);\r\n        }\r\n    }\r\n\r\n    private resetAdvert() {\r\n        this.filesSelected = [];\r\n        this.imagesSelected = [];\r\n        this.existingAdvert = null;\r\n        this.postingAdvert = false;\r\n    }\r\n\r\n    getFileExtensionFromContentType(contentType: string) {\r\n        var extension = \"\";\r\n        switch (contentType.toLowerCase()) {\r\n            case \"image/jpeg\":\r\n            case \"image/jpg\": {\r\n                extension = \"jpg\";\r\n            }\r\n            case \"image/png\": {\r\n                extension = \"png\";\r\n            }\r\n            default: {\r\n                extension = \"jpg\";\r\n            }\r\n        }\r\n        return extension;\r\n    }\r\n\r\n    async updateLatLngFromPostcode(postCode: string) {\r\n        this.showMap = false;\r\n        let res = await this.geoService.findAddressByPostcode(postCode);\r\n        var extractedPostcode = this.geoService.extractPostcode(res.address_components);\r\n        this.postFormGroup.controls['postcode'].setValue(extractedPostcode);\r\n        this.foundAddress = res.formatted_address;\r\n\r\n        this.lat = res.geometry.location.lat();\r\n        this.lng = res.geometry.location.lng();\r\n\r\n        this.postFormGroup.controls['lat'].setValue(this.lat);\r\n        this.postFormGroup.controls['lng'].setValue(this.lng);\r\n\r\n        this.showMap = true;\r\n        if (this.mapComponent) {\r\n            this.mapComponent.lat = this.lat;\r\n            this.mapComponent.lng = this.lng;\r\n            this.mapComponent.loadMap();\r\n        }\r\n    }\r\n\r\n    async rememberToSaveAlert() {\r\n        var text = this.editMode ? \"save\" : \"publish\";\r\n\r\n        let alert = await this.alertCtrl.create({\r\n            header: 'Remember to save',\r\n            subHeader: \"Changes won't take affect till you \" + text,\r\n            buttons: ['Ok']\r\n        });\r\n        await alert.present();\r\n    }\r\n}\r\n","<ion-header>\r\n  <app-topbar title=\"Post\" displaySearchBar=\"false\" displayCameraIcon=\"false\"></app-topbar>\r\n</ion-header>\r\n\r\n<ion-content  class=\"ion-padding\" class=\"post\">\r\n\r\n\r\n  <div *ngIf=\"!auth.user\">Please sign in</div>\r\n\r\n  <div *ngIf=\"auth.user\">\r\n    <h1 *ngIf=\"!editMode\" class=\"center\">Post advert page</h1>\r\n    <h1 *ngIf=\"editMode\" class=\"center\">Edit advert</h1>\r\n\r\n    <div *ngIf=\"!editMode || (this.editMode && !this.loadingAdvert)\">\r\n\r\n      <ion-item *ngIf=\"advertExpired\">\r\n        <ion-toggle [(ngModel)]=\"removeExpiry\" (click)=\"rememberToSaveAlert()\"></ion-toggle>\r\n        <ion-label class=\"ion-text-wrap\">Re-publish (default 30 days)</ion-label> <br />\r\n      </ion-item>\r\n\r\n\r\n\r\n      <input id=\"file-upload\" (change)=\"uploadImage($event.target.files)\" [(ngModel)]=\"fileInput\" type=\"file\" name=\"file-upload\" accept=\"image/*\" multiple\r\n        style=\"display:none;\">\r\n\r\n      <label for=\"file-upload\" class=\"add-image\" style=\"color:rgb(0, 132, 80)\">Add image</label>\r\n\r\n\r\n      <div *ngFor=\"let file of imagesSelected\">\r\n\r\n        <ion-thumbnail (click)=\"imagePressAlert(file)\"><img [src]=\"file.src\" /></ion-thumbnail>\r\n\r\n      </div>\r\n\r\n      <div *ngIf=\"existingAdvert?.images?.length > 0\">\r\n        <div *ngFor=\"let image of existingAdvert?.images\">\r\n          <ion-item *ngIf=\"image.url\">\r\n            <ion-card class=\"upload-image-thumbnails\" (click)=\"existingImagePressAlert(image)\" s>\r\n              <ion-img style=\"float:left;\" [hidden]=\"image.url == null\" [src]=\"image.url\" style=\"object-fit: cover;\">\r\n              </ion-img>\r\n            </ion-card>\r\n          </ion-item>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <form [formGroup]=\"postFormGroup\">\r\n        <ion-item>\r\n          <ion-label position=\"floating\">Add item title</ion-label>\r\n          <ion-input formControlName=\"title\" id=\"title\"></ion-input>\r\n        </ion-item>\r\n\r\n        <ion-item>\r\n          <ion-label position=\"floating\">Add item description</ion-label>\r\n          <ion-input type=\"text\" formControlName=\"description\" name=\"desciption\" id=\"description\" maxlength=\"250\">\r\n          </ion-input>\r\n        </ion-item>\r\n\r\n        <ion-item>\r\n          <ion-label position=\"floating\" for=\"category\">Select category</ion-label>\r\n          <ion-select formControlName=\"category\" name=\"category\" id=\"category\">\r\n            <ion-select-option *ngFor=\"let category of categories\" value=\"{{category.categoryCodeEnum}}\" checked=\"false\">{{category.name}}</ion-select-option>\r\n          </ion-select>\r\n        </ion-item>\r\n\r\n\r\n        <p style=\"font-weight: bold;\">All adverts will expire in 30 days from publishing, unless you change the status\r\n          to \"collected\" or \"closed\"\r\n        </p>\r\n\r\n        <ion-item>\r\n          <ion-label position=\"floating\">Enter a postcode - remains private</ion-label>\r\n          <ion-input type=\"text\" formControlName=\"postcode\" name=\"postcode\" id=\"postcode\" debounce=\"1500\"\r\n            (ionChange)='updateLatLngFromPostcode($event.target.value)'></ion-input>\r\n          <ion-button clear type=\"button\" slot=\"end\" (click)=\"updateLocation()\">\r\n            <ion-icon *ngIf=\"!postcodeLookupSpinner\" name=\"locate\" style=\"font-size:2em\"></ion-icon>\r\n            <ion-spinner *ngIf=\"postcodeLookupSpinner\"></ion-spinner>\r\n          </ion-button>\r\n        </ion-item>\r\n        <ion-item *ngIf=\"foundAddress && postFormGroup.controls['postcode'].valid\">\r\n          <small>{{foundAddress}}</small>\r\n        </ion-item>\r\n        <ion-item *ngIf=\"!postFormGroup.controls.postcode.valid && postFormGroup.controls['postcode'].dirty\">\r\n          Please enter a valid postcode e.g. CF10 4UW\r\n        </ion-item>\r\n\r\n        <div *ngIf=\"lat && lng && showMap\">\r\n          <app-map #mapComponent  [lat]=\"lat\" [lng]=\"lng\" [radius]=\"3\"\r\n            [disableDefaultUI]=\"true\" [draggable]=\"false\" [disableNavigation]=\"false\"></app-map>\r\n        </div>\r\n\r\n        <ion-input type=\"hidden\" formControlName=\"lat\" id=\"lat\"></ion-input>\r\n        <ion-input type=\"hidden\" formControlName=\"lng\" id=\"lng\"></ion-input>\r\n\r\n        <ion-item [hidden]=\"postFormGroup.valid\">\r\n          <span style=\"color:red;\">Please fill in all fields</span>\r\n        </ion-item>\r\n\r\n      </form>\r\n\r\n      <ion-item>\r\n        <ion-toggle [(ngModel)]=\"draft\" (click)=\"rememberToSaveAlert()\"></ion-toggle>\r\n        <ion-label>Draft - hidden from search</ion-label> <br />\r\n      </ion-item>\r\n\r\n      <ion-button slot=\"end\" full primary [disabled]=\"!postFormGroup.valid\" (click)=\"postAdvert(filesSelected)\"\r\n        *ngIf=\"!postingAdvert && !editMode\">\r\n        Publish\r\n      </ion-button>\r\n\r\n      <ion-button slot=\"end\" full primary [disabled]=\"!postFormGroup.valid\" (click)=\"updateAdvert(filesSelected)\"\r\n        *ngIf=\"!postingAdvert && editMode\">\r\n        Save changes\r\n      </ion-button>\r\n\r\n      <div style=\"display:none;\" id=\"original\"></div>\r\n      <div id=\"resampled\"></div>\r\n    </div>\r\n  </div>\r\n</ion-content>"],"sourceRoot":"webpack:///"}