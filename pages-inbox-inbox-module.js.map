{"version":3,"sources":["./src/app/pages/inbox/inbox.module.ts","./src/app/pages/inbox/inbox.page.ts","./src/app/pages/inbox/inbox.page.html"],"names":[],"mappings":"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","file":"pages-inbox-inbox-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { InboxPage } from './inbox.page';\r\nimport { ComponentsModule } from '../../components/components.module';\r\nimport { PipesModule } from '../../pipes/pipes.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: InboxPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    ComponentsModule,\r\n    PipesModule\r\n  ],\r\n  declarations: [InboxPage]\r\n})\r\nexport class InboxPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { AdvertService } from \"./../../services/advert.service\";\r\n\r\nimport { NavController, ActionSheetController } from \"@ionic/angular\";\r\nimport { AuthService } from \"../../services/auth.service\";\r\nimport { ErrorService } from \"../../services/error.service\";\r\nimport {  ChatClient, PaginationRequest, ChatResponseModel } from '../../clients/bonobogive.client';\r\n\r\n\r\n@Component({\r\n  selector: 'inbox',\r\n  templateUrl: './inbox.page.html',\r\n  styleUrls: ['./inbox.page.scss'],\r\n})\r\nexport class InboxPage implements OnInit {\r\n\r\n  title = \"Private Messages\";\r\n  messageSpinner: boolean = false;\r\n  myConversations: ChatResponseModel[] = [];\r\n  theirConversations: ChatResponseModel[] = [];\r\n  userId: string;\r\n  segmentOption: string = \"owner\";\r\n  lastEvaluatedKeyHash = \"\";\r\n\r\n\r\n  myAdvertsNewMessageCount = 0;\r\n  otherAdvertsNewMessageCount = 0;\r\n\r\n\r\n  constructor(public auth: AuthService,\r\n    public errorService: ErrorService,\r\n    public navController: NavController,\r\n    public advertService: AdvertService,\r\n    public actionSheetCtrl: ActionSheetController,\r\n    private chatClient: ChatClient) { }\r\n\r\n\r\n\r\n  openUserProfile(userId: string) {\r\n    console.log(\"opening profile user id: \" + userId);\r\n    this.navController.navigateForward(\"UserProfile/\" + userId);\r\n  }\r\n\r\n  more() {\r\n    this.getUserChats();\r\n  }\r\n\r\n  refresh() {\r\n    this.lastEvaluatedKeyHash = \"\";\r\n    this.getUserChats();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getUserChats();\r\n  }\r\n\r\n  getUserChats() {\r\n\r\n    var paginationRequest = new PaginationRequest();\r\n    paginationRequest.take = 100;\r\n    paginationRequest.nextRequestBlob = this.lastEvaluatedKeyHash;\r\n\r\n    this.chatClient.getUserChats(this.auth.user.uid, paginationRequest.take, paginationRequest.nextRequestBlob).subscribe(res => {\r\n      console.log(\"chats\", res);\r\n      this.myConversations = res.entities.filter(x=>x.advert.userId === this.auth.user.uid);\r\n      this.theirConversations = res.entities.filter(x=>x.advert.userId !== this.auth.user.uid);\r\n      this.lastEvaluatedKeyHash = res.lastEvaluatedKeyHash;\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    console.log(\"all adverts\");\r\n  }\r\n\r\n}\r\n","<ion-header>\r\n  <app-topbar title=\"Private Messages\"></app-topbar>\r\n</ion-header>\r\n<ion-content class=\"ion-padding\" class=\"messages\">\r\n\r\n  <div *ngIf=\"!auth.user\">\r\n    <p>Please sign in</p>\r\n  </div>\r\n\r\n  <div *ngIf=\"auth.user\">\r\n\r\n    <ion-spinner class=\"mainspinner\" class=\"ion-padding\" right [hidden]=\"myConversations\"></ion-spinner>\r\n    <h2>Inbox</h2>\r\n\r\n    <ion-segment [(ngModel)]=\"segmentOption\" color=\"secondary\">\r\n      <ion-segment-button value=\"owner\">\r\n        My adverts ({{myConversations | conversationsSeenCount}})\r\n        <ion-badge *ngIf=\"(myConversations | conversationsSeenCount) < myConversations.length\" color=\"danger\">{{myConversations.length - (myConversations | conversationsSeenCount)}} new</ion-badge>\r\n      </ion-segment-button>\r\n      <ion-segment-button value=\"guest\">\r\n        My requests \r\n        ({{theirConversations | conversationsSeenCount}})\r\n        <ion-badge *ngIf=\"(theirConversations | conversationsSeenCount) < theirConversations.length\" color=\"danger\">{{theirConversations.length - (theirConversations | conversationsSeenCount)}} new</ion-badge>\r\n      </ion-segment-button>\r\n    </ion-segment>\r\n\r\n\r\n    <div *ngIf=\"segmentOption === 'owner'\">\r\n      <ion-list *ngIf=\"myConversations\">\r\n        <app-chat-item  *ngFor=\"let conversation of myConversations\" [chat]=\"conversation\"></app-chat-item>\r\n      </ion-list>\r\n      <p *ngIf=\"myConversations.length < 1\">You have no messages for your own adverts</p>\r\n    </div>\r\n\r\n    <div *ngIf=\"segmentOption === 'guest'\">\r\n      <ion-list *ngIf=\"theirConversations\">\r\n        <app-chat-item *ngFor=\"let conversation of theirConversations\" [chat]=\"conversation\"></app-chat-item>\r\n      </ion-list>\r\n      <p *ngIf=\"theirConversations.length < 1\">You have no messages for other adverts</p>\r\n    </div>\r\n\r\n  </div>\r\n\r\n\r\n</ion-content>"],"sourceRoot":"webpack:///"}